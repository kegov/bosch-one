/*
 * Copyright (c) 2020 Bosch Sensortec GmbH.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
 
/* 
 * changes required to support BHIx60 driver in NICLA Sense ME. 
 * TODO: incorporate directly in Nicla Sense ME DTS, since the BHIx60 chip is the
 * core feature of NICLA Sense ME
 */
 
/{
	/*Define "Wake-Up" GPIO pin for Power Management*/
	wup {
		compatible = "gpio-keys";
		wup0: wup_0 {
			gpios = <&gpio0 14 GPIO_ACTIVE_HIGH>;	/*Interrupt-OUT pin of BHI260*/
			label = "BHIx60 Int pin";
						status = "okay";
		};
	};
	
	/*littlefs partition on external spi flash mx25r1635f 16MB
	NOTE: the NICLA Reference manual incorrectly refers to this as MX231835 2MB
	The correct chip is in the NICLA schematics, as well as in the NICLA DTS*/
	fstab {
		compatible = "zephyr,fstab";
		lfs1: lfs1 {
			compatible = "zephyr,fstab,littlefs";
			mount-point = "/lfs1";
			partition = <&logging_partition>;
			automount;
			
			read-size = <16>;
			prog-size = <16>;
			cache-size = <64>;
			lookahead-size = <32>;
			block-cycles = <512>; 
			
		};
	};

};
	
/*override pinctrl of current Nicla DTS to provide pull up to UART-Rx
This is an error in the NICLA DTS that needs to be corrected*/
&pinctrl {
	uart0_default: uart0_default {
		group1 {
			psels = <NRF_PSEL(UART_TX, 0, 20)>;
		};

		group2 {
			psels = <NRF_PSEL(UART_RX, 0, 9)>;
			bias-pull-up;
		};

	};
};

//Override the storage_partition in the original Nicla DTS so that the
//"storage" label can be applied to the SPI flash sector below. This is
//required for proper functioning of littlefs
&flash0 {
	partitions {
		storage_partition: partition@7a000 {
		label = "storage2"; //override "storage" in originl DTS
		reg = <0x0007a000 0x00006000>;
	};
	};
};

//I2C0 Pins are connected to LED+Battery Charger in NICLA schematic
	//no correspondence with AB3 pins
	// &i2c0 {
	// 	status = "okay";
	// 	led_rgb: fl3194@53 {
	// 		compatible = "issi,is31fl3194";
	// 		reg = <0x53>;
	// 		label = "FL3194";
	// 	};
	// 	bat_level: bq25120@6a {
	// 		compatible = "ti,bq25120";
	// 		status = "okay";
	// 		reg = <0x6a>;
	// 		label = "BQ25120";
	// 		cd-gpios = <&gpio0 25 GPIO_ACTIVE_LOW>;
	// 		/*settings for LP4030 3.7 V, 450mAH battery*/
	// 		bat_reg_mv = <3700>;	//regulation voltage of battery in mv (3.6-4.65V)
	// 		ilim_ma = <200>;		//Input current limit of device in mA. (50-400 mA)
	// 		bat_uvlo_mv = <2750>;	//Battery under-voltage lockout in mV (2.2-3 V, Disable UVLO:0)
	// 		icharge_ma = <200>; 	//Charging current in mA (5-300mA, Disable Charger:0)
	// 		ipreterm_ua = <20000>;	//pre-charging current/terminating current in uA 
	// 								//(500uA to 37000uA (37mA), Disable Termination:0)
	// 								//This is charging current at start and end of charging, usually 10% of peak
	// 	};

	// };

//SPI2 module is used as shuttle_spi i.e. as main SPI connection to BHI260 and NOR Flash
//because that is how it is defined in arduino_nicla_sense_me.dts
//Note however that corresponding pins in the pinctrl dtsi are referred to as SPI0 in NICLA datasheet
//Note that the current Nicla DTS has a wrong value and name for the logging partition
//that is corrected in this overlay. This needs to be corrected in the DTS eventually.
&spi2 {
		compatible = "nordic,nrf-spi";
		status = "okay";
		pinctrl-0 = <&spi2_default>;
		pinctrl-1 = <&spi2_sleep>;
		pinctrl-names = "default", "sleep";
		//0: CS of BHI260 1:CS of Flash
		cs-gpios = <&gpio0 31 GPIO_ACTIVE_HIGH>,<&gpio0 26 GPIO_ACTIVE_LOW>;
		
 		bhix60_dev: bhix60@0 {
			compatible = "bosch,bhix60";
			reg = <0>;
			spi-max-frequency = <1000000>;//<20000000>;
			label = "bhix60";
			status = "okay";
			reset-gpios = <&gpio0 18 GPIO_ACTIVE_LOW>;	//reset pin of BHI260
			hirq-gpios = <&gpio0 14 GPIO_ACTIVE_HIGH>;	//Interrupt-OUT pin of BHI260 
		};

		/delete-node/ mx25r1635f@0;
		
		mx25r1635f: mx25r1635f@1 {
			compatible = "jedec,spi-nor";
			reg = <1>;
			spi-max-frequency = <80000000>;
			label = "MX25R163F";
			jedec-id = [c2 28 15];
			size = <DT_SIZE_M(2*8)>;	//mx25r1635f size is 16Mbits (2 MBytes). Flash Size parameter is given in Mbits 
			has-dpd;
			t-enter-dpd = <10000>;
			t-exit-dpd = <35000>;
			status = "okay";
			partitions {
				compatible = "fixed-partitions";
				#address-cells = <1>;
				#size-cells = <1>;
	
				logging_partition: partition@0 {
					label = "storage";
					reg = <0x00000000 DT_SIZE_M(2)>;//2 Mbytes (sector size is given in MBytes, not Mbits as above)
				};
			};
		};
		
	};
	
	uart_dev: &uart0 {
		status = "okay";
	};


